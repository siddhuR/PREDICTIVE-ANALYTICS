split <- sample.split(df$strength,SplitRatio = 0.75)
train <- subset(df1,split==T)
test <- subset(df1,split==F)
library(neuralnet)
#attach(df)
model <- neuralnet(strength~., data = train,hidden=5 )
plot(model)
a<- predict(model,test)
a
m<- compute(a,test[1:8])
library(party)
ds <- readingSkills
View(ds)
d<- read.csv('Datasets/LUNGCAP.csv')
View(d)
str(d)
summary(d)
sum(is.na(d))
lapply(d, str)
lapply(d, summary)
#null values remove
d$LungCap[is.na(d$LungCap)] <- mean(d$LungCap, na.rm = T)
d$Age[is.na(d$Age)] <- mean(d$Age, na.rm = T)
d$Height[is.na(d$Height)] <- mean(d$Height, na.rm = T)
d$LungCap<- scale(d$LungCap)
d$Age<- scale(d$Age)
d$Height<- scale(d$Height)
plot(Age, LungCap)
#null values remove
d$LungCap[is.na(d$LungCap)] <- mean(d$LungCap, na.rm = T)
d$Age[is.na(d$Age)] <- mean(d$Age, na.rm = T)
d$Height[is.na(d$Height)] <- mean(d$Height, na.rm = T)
Ln<- scale(d$LungCap)
An<- scale(d$Age)
Hn<- scale(d$Height)
View(d)
d<- read.csv('Datasets/LUNGCAP.csv')
str(d)
summary(d)
sum(is.na(d))
lapply(d, str)
#null values remove
d$LungCap[is.na(d$LungCap)] <- mean(d$LungCap, na.rm = T)
d$Age[is.na(d$Age)] <- mean(d$Age, na.rm = T)
d$Height[is.na(d$Height)] <- mean(d$Height, na.rm = T)
Ln<- scale(d$LungCap)
An<- scale(d$Age)
Hn<- scale(d$Height)
View(d)
attach(d)
plot(Age, LungCap)
model<- lm(LungCap~Age)
abline(model,col="red",lwd=3)
model<- lm(LungCap~An+Hn)
abline(model,col="red",lwd=3)
model<- lm(LungCap~d$An+d$Hn)
model<- lm(LungCap~+Age)
abline(model,col="red",lwd=3)
library(arules)
abline(model,col="red",lwd=3)
pre <- predict(modell,data=d)
plot(Age, LungCap)
model<- lm(LungCap~+Age)
pre <- predict(modell,data=d)
pre <- predict(model,data=d)
pre
cm <- table(d,model)
cm <- table(pre,d)
cm <- table(pre,model)
cm <- table(pre,data=d)
cm <- table(pre,newdata=d)
pre <- predict(model,newdata=d)
cm <- table(pre,newdata=d)
cm <- table(pre,d$LungCap)
accuracy(cm)
cm
Ln<- scale(d$LungCap)
An<- scale(d$Age)
Hn<- scale(d$Height)
View(d)
attach(d)
plot(Age, LungCap)
model<- lm(LungCap~+Age)
pre <- predict(model,newdata=d)
abline(model,col="red",lwd=3)
pre <- predict(model,d)
pre
dataset = read.csv('data2.csv')
data("airquality")
View(airquality)
aq <- airquality
summary(aq)
str(aq)
#Handling NA's
aq$Ozone[is.na(aq$Ozone)]<-mean(aq$Ozone, na.rm = T)
aq$Solar.R[is.na(aq$Solar.R)]<-mean(aq$Solar.R,na.rm = T)
#Normalization
nor <- function(x){(x-min(x)) / (max(x)-min(x)) }
aq_norm <- as.data.frame(lapply(aq[c(1,2,3,4)], nor))
aq[c(1,2,3,4)] <- aq_norm
??attach
attach(aq)
#model
MULTIREG <- lm(Ozone~.,data = aq_norm)
summary(MULTIREG)
attributes(MULTIREG)
#test data
checkozone = data.frame(Solar.R = 150, Wind = 9, Temp =80)
#Predict
result = predict(MULTIREG, checkozone)
result
##Visualization of model
plot(Ozone ~ MULTIREG$fit)
plot(MULTIREG$fit + MULTIREG$res ~ MULTIREG$fit)
abline(0,1,col=5, lwd=3) #0 is the intercept and 1 is the slope.
?abline
#fit - Fitted Values, also known as predicted Values, are the value that a
#fit - Fitted Values, also known as predicted Values, are the value that a
#regression predicts for the dependent Variable(or response Variable) based on the
#res - Residuals,  also known as errors, are the difference between the
#res - Residuals,  also known as errors, are the difference between the
#observed values of the dependant variables and the corresponding predicted
# Select position_salaries dataset
dataset <- read.csv(file.choose(),sep = ',',header = T)
dataset = dataset[2:3]
dataset
#Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
plot(dataset$Level, dataset$Salary, main = "plot")
abline(lin_reg)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
dataset$Level
dataset$Level2
dataset$Level3
dataset$Level4
g<-ggplot(dataset,)+
geom_point(aes(x=Level,y=Salary),colour='blue')+
geom_line(aes(x=Level,y=Salary),colour='red')
g
g<-ggplot(dataset,)+
geom_point(aes(x=Level,y=Salary),colour='blue')+
geom_line(aes(x=Level,y=Salary),colour='red')
library(ggplot2)
g<-ggplot(dataset,)+
geom_point(aes(x=Level,y=Salary),colour='blue')+
geom_line(aes(x=Level,y=Salary),colour='red')
g
#Predicting a new result with linear Regression
predict(lin_reg, data.frame(Level = 6.5))
#Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4=6.5^4))
# Select position_salaries dataset
dataset <- read.csv(file.choose(),sep = ',',header = T)
View(dataset)
dataset = dataset[2:3]
dataset
#Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
plot(dataset$Level, dataset$Salary, main = "plot")
abline(lin_reg)
abline(lin_reg,col="red")
abline(lin_reg)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
dataset$Level
dataset$Level2
dataset$Level3
dataset$Level4
library(ggplot2)
g<-ggplot(dataset,)+
geom_point(aes(x=Level,y=Salary),colour='blue')+
geom_line(aes(x=Level,y=Salary),colour='red')
g
#Predicting a new result with linear Regression
predict(lin_reg, data.frame(Level = 6.5))
#Predicting a new result with linear Regression
predict(lin_reg, data.frame(Level = 6.5))
#Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4=6.5^4))
plot(dataset$Level, dataset$Salary, main = "plot")
abline(lin_reg)
data <- iris
head(iris)
library(ClusterR)
str(data)
data <- data[,-5]
sum(is.na(data))
set.seed(123)
??kmeans
kModel <- kmeans(data,centers = 3,nstart = 20)
kModel
kModel$cluster
cm<- table(iris$Species,kModel$cluster)
cm
sum(diag(cm))/(sum(cm))
accuracy(cm)
plot(data[1:2],
col = kModel$cluster,
main = "K-means with 3 clusters")
clusplot(data[1:2],
kModel$cluster,xlab = "Sepal.Length",ylab = "Sepal.Width",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
clusplot(data[1:2],
kModel$cluster,xlab = "Sepal.Length",ylab = "Sepal.Width",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
library(ClusterR)
str(data)
data <- data[,-5]
sum(is.na(data))
set.seed(123)
??kmeans
kModel <- kmeans(data,centers = 3,nstart = 20)
kModel
kModel$cluster
cm<- table(iris$Species,kModel$cluster)
cm
sum(diag(cm))/(sum(cm))
accuracy(cm)
plot(data[1:2],
col = kModel$cluster,
main = "K-means with 3 clusters")
clusplot(data[1:2],
kModel$cluster,xlab = "Sepal.Length",ylab = "Sepal.Width",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
library(ClusterR)
clusplot(data[1:2],
kModel$cluster,xlab = "Sepal.Length",ylab = "Sepal.Width",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
d<- read.csv('Datasets/LUNGCAP.csv')
View(d)
#View(d)
str(d)
summary(d)
sum(is.na(d))
lapply(d, str)
lapply(d, summary)
#null values remove
d$LungCap[is.na(d$LungCap)] <- mean(d$LungCap, na.rm = T)
d$Age[is.na(d$Age)] <- mean(d$Age, na.rm = T)
d$Height[is.na(d$Height)] <- mean(d$Height, na.rm = T)
Ln<- scale(d$LungCap)
An<- scale(d$Age)
Hn<- scale(d$Height)
View(d)
attach(d)
plot(Age, LungCap)
model<- lm(LungCap~+Age)
abline(model,col="red",lwd=3)
pre <- predict(model,d)
cm <- table(pre,d$LungCap)
cm
# Select position_salaries dataset
dataset <- read.csv(file.choose(),sep = ',',header = T)
View(dataset)
dataset = dataset[2:3]
dataset
#Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
plot(dataset$Level, dataset$Salary, main = "plot")
abline(lin_reg)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
dataset
iris
iris1 = iris
iris1$Species = NULL
iris1
d = dist(iris1,method = "euclidean")
?hclust
hfit = hclust(d,method = "average")
plot(hfit)
grps = cutree(hfit, k=4)
grps
rect.hclust(hfit, k=4,border='red')
read.csv("airport.csv")
df <- read.csv("airport.csv")
getwd()
getwd()
df <- read.csv("airport.csv")
str(df)
View(df)
df <- read.csv("airport.csv")
df <- read.csv("boston.csv")
str(df)
summary(df)
sum(is.na(df))
View(df)
head(df)
library(ClusterR)
library(cluster)
??bosten
??bosten
??bosten
df
df
df <- d[,-9]
df <- df[,-9]
set.seed(123)
kModel <- kmeans(df,centers = 3,nstart = 25)
kModel
kModel$cluster
df1 <- read.csv("boston.csv")
View(df1)
str(df1)
summary(df1)
sum(is.na(df1))
head(df1)
library(ClusterR)
library(cluster)
df1
df <- df1[,-9]
set.seed(123)
kModel <- kmeans(df,centers = 3,nstart = 25)
kModel
kModel$cluster
cm<- table(df,kModel$cluster)
cm<- table(df1$AGE,kModel$cluster)
cm
summary(df1)
sum(diag(cm))/(sum(cm))
accuracy(cm)
df <- scale(df$ZN)
df <- df1[,-9]
View(df)
df <- scale(df[2])
df
df1 <- read.csv("boston.csv")
str(df1)
summary(df1)
sum(is.na(df1))
head(df1)
library(ClusterR)
library(cluster)
df1
df <- df1[,-9]
set.seed(123)
kModel <- kmeans(df,centers = 3,nstart = 25)
kModel
kModel$cluster
plot(data[1:2],
col = kModel$cluster,
main = "K-means with 3 clusters")
plot(df$AGE~.,
col = kModel$cluster,
main = "clusters")
kModel <- kmeans(df1$RAD,centers = 3,nstart = 25)
kModel
kModel$cluster
plot(df[],
col = kModel$cluster,
main = "clusters")
plot(df[1:8],
col = kModel$cluster,
main = "clusters")
cm<- table(df1$AGE,kModel$cluster)
cm
clusplot(df[1:8],
kModel$cluster,xlab = "Age",ylab = "RAD",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
table(df1$AGE,kModel$cluster)
getwd()
df1 <- read.csv("boston.csv")
View(df1)
str(df1)
summary(df1)
sum(is.na(df1))
head(df1)
library(ClusterR)
library(cluster)
df1
df <- df1[,-9]
View(df)
set.seed(123)
kModel <- kmeans(df1$RAD,centers = 3,nstart = 25)
kModel
kModel$cluster
plot(df[1:8],
col = kModel$cluster,
main = "clusters")
plot(df[1:8],
col = kModel$cluster,
main = "clusters")
clusplot(df[1:8],
kModel$cluster,xlab = "Age",ylab = "RAD",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
plot(df[c(1:8,10:14)],
col = kModel$cluster,
main = "clusters")
plot(df[1,2,3,4,5,6,7,8,10,11,12,13,14],
col = kModel$cluster,
main = "clusters")
plot(df[c(1,2,3,4,5,6,7,8,10,11,12,13,14)],
col = kModel$cluster,
main = "clusters")
plot(df[1:14],
col = kModel$cluster,
main = "clusters")
plot(df[1:8],
col = kModel$cluster,
main = "clusters")
getwd()
df1 <- read.csv("boston.csv")
View(df1)
str(df1)
summary(df1)
sum(is.na(df1))
head(df1)
library(ClusterR)
library(cluster)
df1
df <- df1[,-9]
View(df)
set.seed(123)
kModel <- kmeans(df1$RAD,centers = 3,nstart = 25)
kModel
kModel$cluster
plot(df[1:8],
col = kModel$cluster,
main = "clusters")
clusplot(df[1:8],
kModel$cluster,xlab = "Age",ylab = "RAD",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
table(df1$RAD,kModel$cluster)
table(df1$AGE,kModel$cluster)
getwd()
df1 <- read.csv("boston.csv")
View(df1)
str(df1)
summary(df1)
sum(is.na(df1))
head(df1)
df1
df <- df1[,-9]
set.seed(123)
kModel <- kmeans(df1$RAD,centers = 3,nstart = 25)
kModel
kModel$cluster
library(ClusterR)
library(cluster)
plot(df[1:8],
col = kModel$cluster,
main = "clusters")
clusplot(df[1:8],
kModel$cluster,xlab = "Age",ylab = "RAD",
main = "KMeans",
shade = TRUE,
color = TRUE,
labels = 3)
plot(df[1:8],
col = kModel$cluster,
main = "Variation in clusters")
plot(df1[1:8],
col = kModel$cluster,
main = "Variation in clusters")
plot(df1[1:8],
col = kModel$cluster,
main = "Variation in clusters")
View(df1)
plot(df[1:13],
col = kModel$cluster,
main = "Variation in clusters")
clusplot(df[1:13],
kModel$cluster,xlab = "Age",ylab = "RAD",
main = "KMeans Clusters",
shade = TRUE,
color = TRUE,
labels = 3)
